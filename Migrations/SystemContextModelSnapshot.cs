// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Training_Management_System.Data;

#nullable disable

namespace Training_Management_System.Migrations
{
    [DbContext(typeof(SystemContext))]
    partial class SystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Training_Management_System.Models.Course", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("instructorid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("instructorid");

                    b.ToTable("Courses", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            Category = 0,
                            Name = "ASP MVC",
                            instructorid = 1
                        },
                        new
                        {
                            id = 2,
                            Category = 1,
                            Name = "Biochemistry",
                            instructorid = 3
                        });
                });

            modelBuilder.Entity("Training_Management_System.Models.Grade", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Sessionid")
                        .HasColumnType("int");

                    b.Property<int>("Traineeid")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("Sessionid");

                    b.HasIndex("Traineeid");

                    b.ToTable("Grades", null, t =>
                        {
                            t.HasCheckConstraint("CK_Grade_Value", "[Value] BETWEEN 0 AND 100");
                        });

                    b.HasData(
                        new
                        {
                            id = 1,
                            Sessionid = 1,
                            Traineeid = 2,
                            Value = 90m
                        });
                });

            modelBuilder.Entity("Training_Management_System.Models.Session", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("courseid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("courseid");

                    b.ToTable("Sessions", null, t =>
                        {
                            t.HasCheckConstraint("CK_Session_EndDate", "[EndDate] > [StartDate]");
                        });

                    b.HasData(
                        new
                        {
                            id = 1,
                            EndDate = new DateTime(2025, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            courseid = 1
                        },
                        new
                        {
                            id = 2,
                            EndDate = new DateTime(2025, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            courseid = 2
                        });
                });

            modelBuilder.Entity("Training_Management_System.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            Email = "mohamed@gmail.com",
                            Name = "Mohamed Adel",
                            Role = "instructor"
                        },
                        new
                        {
                            id = 2,
                            Email = "Moheb@gmail.com",
                            Name = "Moheb",
                            Role = "Trainer"
                        },
                        new
                        {
                            id = 3,
                            Email = "Omar@gmail.com",
                            Name = "Omar",
                            Role = "instructor"
                        });
                });

            modelBuilder.Entity("Training_Management_System.Models.Course", b =>
                {
                    b.HasOne("Training_Management_System.Models.User", "instructor")
                        .WithMany("courses")
                        .HasForeignKey("instructorid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("instructor");
                });

            modelBuilder.Entity("Training_Management_System.Models.Grade", b =>
                {
                    b.HasOne("Training_Management_System.Models.Session", "session")
                        .WithMany("grades")
                        .HasForeignKey("Sessionid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Training_Management_System.Models.User", "Trainee")
                        .WithMany("grades")
                        .HasForeignKey("Traineeid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Trainee");

                    b.Navigation("session");
                });

            modelBuilder.Entity("Training_Management_System.Models.Session", b =>
                {
                    b.HasOne("Training_Management_System.Models.Course", "course")
                        .WithMany("Sessions")
                        .HasForeignKey("courseid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("course");
                });

            modelBuilder.Entity("Training_Management_System.Models.Course", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("Training_Management_System.Models.Session", b =>
                {
                    b.Navigation("grades");
                });

            modelBuilder.Entity("Training_Management_System.Models.User", b =>
                {
                    b.Navigation("courses");

                    b.Navigation("grades");
                });
#pragma warning restore 612, 618
        }
    }
}
